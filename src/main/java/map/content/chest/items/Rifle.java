package map.content.chest.items;

import bot.VampusBot;
import map.State;
import map.cell.Cell;
import map.content.chest.Item;
import map.content.deadly.Hole;
import map.content.deadly.Vampus;
import map.content.deadly.VampusInHole;
import map.player.Player;
import org.apache.log4j.Logger;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.function.BinaryOperator;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;

public class Rifle extends Item {
    private static final Logger logger = Logger.getLogger(Rifle.class);

    public Rifle() {
        super(
                "üî´",
                "–≠—Ç–æ —Ä—É–∂—å—ë, –æ–Ω–æ —Å—Ç—Ä–µ–ª—è–µ—Ç –≤ –≤—ã–±—Ä–∞–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏. –ü—É–ª—è –ª–µ—Ç–∏—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ —É–±—å—ë—Ç –≤–∞–º–ø—É—Å–∞ –∏–ª–∏ –Ω–µ –≤—Ä–µ–∂–µ—Ç—Å—è –≤ —Å—Ç–µ–Ω—É."
        );
    }

    @Override
    public void defaultState(Player player) {
        super.drawProperty = new HashMap<>();
        super.state = new State(description())
                .addRow("‚Üë:item ‚Üë")
                .addRow("‚Üê:item ‚Üê", "‚Üí:item ‚Üí")
                .addRow("‚Üì:item ‚Üì")
                .addRow("–û—Ç–º–µ–Ω–∞:cancel");
    }

    @Override
    public void changeState(VampusBot bot, Player player, String command) {
        UnaryOperator<Cell> operator;
        switch (command) {
            case "‚Üë":
                operator = Cell::up;
                break;
            case "‚Üê":
                operator = Cell::left;
                break;
            case "‚Üí":
                operator = Cell::right;
                break;
            case "‚Üì":
                operator = Cell::down;
                break;
            default:
                return;
        }
        Cell cell = player.position();
        while ((cell = operator.apply(cell)) != null) {
            final Cell finalCell = cell;
            super.drawProperty = new HashMap<Cell, String>() {{
                put(finalCell, "‚ùå");
            }};
            player.instance(bot);
            bot.sleep(1);
            if (!cell.empty())
                if (cell.content().getClass() == Vampus.class || cell.content().getClass() == VampusInHole.class) {
                    bot.edit(new State("–ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –≤–∞–º–ø—É—Å–∞!"), player.id(), player.gameInstance());
                    bot.sleep(5);
                    if (cell.content().getClass() == Vampus.class)
                        cell.deleteContent();
                    else {
                        cell.deleteContent();
                        cell.setContent(new Hole());
                    }
                    break;
                }
        }
    }
}
